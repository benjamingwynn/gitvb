#!/usr/bin/env bash
set -e

GITVB_HOME="./.git/.gitvb-v0"
MAIN_BRANCH="${MAIN_BRANCH:-main}"

if [ "$(git branch --show-current)" != "$MAIN_BRANCH" ]; then
    echo "you are not on the main branch: $MAIN_BRANCH"
    exit 1
fi

echo "fetching..."
git fetch --quiet
echo "ok!"
nMainBehind=$(git rev-list --count $MAIN_BRANCH..origin/$MAIN_BRANCH)

pickedBranches="$(gitvb-ls)"
if [ -z "$pickedBranches" ]; then
    nPicked=0
else
    nPicked="$(echo "$pickedBranches" | wc -l | xargs)"
fi

echo ""
echo "on the main branch, $MAIN_BRANCH"
echo "you have $nPicked picked branches, they are $nMainBehind commits behind origin/$MAIN_BRANCH"
echo ""
echo "picked:"
echo ""

publishBranches=""
canPublish=false
needResync=false
nNeedPublish=0

if [ "$nMainBehind" != "0" ]; then
    needResync=true
fi

if [ ! -z "$pickedBranches" ]; then
    while IFS= read -r line; do
        nAhead=$(git rev-list --count origin/$MAIN_BRANCH..$line)
        nUnpushed=$(git rev-list --count origin/$line..$line)
        nBehind=$(git rev-list --count $line..origin/$line)
        
        nRemote=$(git rev-list --count "origin/$line" ^"$line")

        nCommits=$(echo "$nAhead - $nRemote" | bc)

        # -$nBehind : 

        if [ "$nUnpushed" != "0" ]; then
        # üîÑ
        # ‚öõÔ∏è
        # ‚ú≥Ô∏è
        # ‚ùáÔ∏è
            echo -n " ‚ú≥Ô∏è  "
        else
            echo -n " üîÑ "
        fi

        echo -n "[+$nAhead]  $line"

        if [ "$nAhead" != "0" ]; then
            # echo -n " - !"
            if [ -z "$(git show-ref --heads origin $line)" ]; then
                echo -n " - remote gone!!!"
                needResync=true
            fi
        fi

        if [ "$nRemote" != "0" ]; then
            echo -n " -- needs publish to rebase upstream!"
            canPublish=true
            nNeedPublish=$((nNeedPublish + 1))
            publishBranches="$publishBranches
$line"
        else
            if [ "$nUnpushed" != "0" ]; then
                if [ "$nAhead" == "0" ]; then
                    echo -n " -- needs publish to rebase upstream!!"
                else
                    echo -n " ($nUnpushed to publish)"
                fi

                canPublish=true
                nNeedPublish=$((nNeedPublish + 1))
                publishBranches="$publishBranches
$line"
                # echo -n " - $nUnpushed unpublished!"
            # else
                # printf "]"
            fi
            # printf "$nBehind from upstream]"
            if [ "$nBehind" != "0" ]; then
                canPublish=true
                nNeedPublish=$((nNeedPublish + 1))
                publishBranches="$publishBranches
$line"
            fi
        fi
        # printf " nRemote=$nRemote nAhead=$nRemote"
        echo ""
        git diff --name-status $(git merge-base $MAIN_BRANCH origin/$MAIN_BRANCH)..$line | awk '
  $1 == "D" {print "\033[31m" "       -  " $2 "\033[0m"}
  $1 == "A" {print "\033[32m" "       +  " $2 "\033[0m"}
  $1 == "M" {print "\033[36m" "       ~  " $2 "\033[0m"}
'
    done <<< "$pickedBranches"
fi

# > verify all of the applied hashes are applied still
# > if not, warn
# git branch --contains 3add3e57a113b1aba30053298ff7f2c6ad3122fa

echo ""
echo "unpicked:"
echo ""
# --no-merged HEAD 
# branches="$(git branch -a --format='%(refname:short)' | grep -v "^$MAIN_BRANCH$" | head -n 250)"
branches="$(git branch --format='%(refname:short)')"
# branchesLocal=$(echo "$branches" | grep -v '^origin/' || echo)
#  | sed 's/remotes\/origin\///g'

while IFS= read -r line; do
    if [ -z "$line" ]; then
        continue
    fi
    if [ "$line" == "$MAIN_BRANCH" ]; then
        continue
    fi
    branchName=$(echo "$line" | grep -v '^origin/' || echo)

    if [ -z "$branchName" ]; then
        continue
    fi


    if echo "$pickedBranches" | grep -q "^$line$"; then
        # echo "The pickedBranches contains '$line'"
        continue
    # else
        # echo "The pickedBranches does not contain '$line'"
    fi

    nAhead=$(git rev-list --count origin/$MAIN_BRANCH..$line)

    if gitvb-is-pickable "$branchName" &>/dev/null; then
    # if [ "$needsPublishing" == "1" ]; then
        echo -n " üÜó "
    else 
        echo -n " ‚òØÔ∏è  "
    fi

    echo "[+$nAhead]  $branchName" #
    
done <<< "$branches"

# echo
# echo "   ‚ú≥Ô∏è  ready to be picked     ‚òØÔ∏è  sync required"

# echo "$branchesLocal"
echo ""
gitvb-s

if [ "$needResync" == true ]; then
    echo " ‚ö†Ô∏è  A remote has gone or there are upstream changes, you must resync!"
    echo "    $ gitvb-resync"
    echo ""
else
    if [ ! -z "$(git diff --staged)" ]; then
        echo "you have staged changes, commit with:"
        echo "  $ gitvb-commit"
        echo ""
        echo "or directly commit and send to the remote with:"
        echo "  $ gitvb-send"
        echo
    fi

    if [ $nNeedPublish == $nPicked ]; then
        echo "upstream your changes with:"
        echo "  $ gitvb-publish-all"
        echo
    else
        if [ ! -z "$publishBranches" ]; then
            echo "upstream your changes with:"
            while IFS= read -r line; do
                if [ -z "$line" ]; then
                    continue
                fi
                echo " $ gitvb-publish $line"
                echo
            done <<< "$publishBranches"
        fi
    fi
fi
