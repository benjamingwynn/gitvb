#!/usr/bin/env bash
set -e

GITVB_HOME="./.git/.gitvb-v0"
MAIN_BRANCH="${MAIN_BRANCH:-main}"

if [ ! -z "$(git diff --staged)" ]; then
    echo "there are staged changes. exiting."
    exit 1
fi

if [ "$(git branch --show-current)" != "$MAIN_BRANCH" ]; then
    echo "you are not on the main branch: $MAIN_BRANCH"
    exit 1
fi

# 0. bail if anything staged
# gitvb-is-unpickable

# 1. fetch
# echo a
# git fetch --progress
echo
echo "(fetching)"
git fetch --progress

# nBehind=$(git rev-list --count $MAIN_BRANCH..origin/$MAIN_BRANCH)
# if [ "$nBehind" == "0" ]; then
#     echo
#     echo "you are up to date already. no work needs to be done."
#     echo
#     exit 18
# fi

echo b
# 2. wip commit if any unstaged files changed
gitvb-wip resync
echo c
pickedBranches="$(gitvb-ls)"

# 3. unpick every picked branch
if [ ! -z "$pickedBranches" ]; then
    while IFS= read -r line; do
        echo i will now unpick $line
        gitvb-unpick $line
    done <<< "$pickedBranches"
fi

# 5. rebase master on origin/master
echo updating $MAIN_BRANCH
git pull --rebase

repickBranches=""

# 4. checkout each picked branch, and with it rebase on origin/master
if [ ! -z "$pickedBranches" ]; then
    echo d
    while IFS= read -r line; do
        echo i will now checkout $line
        git checkout "$line"

        # determine if the branch was merged into main with the original branch deleted
        # in this case, we should cleanup our local branch and not repick it
        if [ ! -z "$(git ls-remote --heads origin $line)" ]; then
            echo "Ref $line exists on the remote."

            echo i will now pull upstream changes to $line
            git pull --rebase
            # git pull --ff-only || echo "nothing to fast-forward"
            echo i will now updated changes to $line with changes from origin/$MAIN_BRANCH
            git rebase "origin/$MAIN_BRANCH"
            repickBranches="$repickBranches
$line"
        else
            echo
            echo "!! REMOVE REFERENCE IS GONE !!"
            echo
            git checkout "$MAIN_BRANCH"
            echo "removing branch since the remote is gone"
            git branch -D $line
        fi


    done <<< "$pickedBranches"
fi


# 6. (re)pick each branch
echo e
git checkout $MAIN_BRANCH
if [ ! -z "$repickBranches" ]; then
    echo f
    while IFS= read -r line; do
        if [ ! -z "$line" ]; then
            echo i will now re-pick $line
            gitvb-pick $line
        fi
    done <<< "$repickBranches"
fi

echo g

# 7. undo wip
gitvb-wip-undo resync

echo ""
echo "everything is now up to date"
echo ""

gitvb-status
